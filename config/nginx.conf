user nginx;

worker_processes auto;


events {}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
					  '$status $body_bytes_sent "$http_referer" '
					  '"$http_user_agent"';

	map $http_upgrade $connection_upgrade {
		default upgrade;
		''        close;
	}

    upstream grpcServers {
        server temi_rpc:8000;
    }

    upstream envoy {
        server envoy:8080;
    }
    server {
           listen 80 ssl;
           ssl_certificate /run/secrets/server.crt;
           ssl_certificate_key /run/secrets/server.key;
           location /api/ {
               proxy_http_version 1.1;
               proxy_pass http://envoy/;
               proxy_set_header Connection "";
           }
       }

    limit_req_zone $request_uri zone=by_uri:10m rate=40r/m;
    server {
           listen 443 ssl http2;
           listen [::]:443 ssl http2;
           charset utf-8;
           ssl_certificate /run/secrets/server.crt;
           ssl_certificate_key /run/secrets/server.key;
           ssl_protocols TLSv1.2;
           ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
           ssl_prefer_server_ciphers on;

           location / {
                limit_req zone=by_uri burst=5;
                grpc_pass grpcs://grpcServers;
           }
       }
}


