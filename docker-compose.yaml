version: "3.9"

services:
  temi_rpc:
    container_name: ${SERVICE_CONTAINER_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SSL_CERT=/run/secrets/nginx.cert
      - SSL_KEY=/run/secrets/nginx.key
    command:
      - ./binary/server
    volumes:
      - .:/opt
    restart: unless-stopped
    depends_on:
      - mongodb
    secrets:
      - nginx.cert
      - nginx.key
    env_file:
      - .env
    ports:
      - ${SERVICE_PORT}:8000
    networks:
     - rpc-network

  envoy:
    build:
      context: .
      dockerfile: Dockerfile.envoy
    volumes:
      - ./envoy.yaml:/etc/envoy.yaml
    ports:
      - ${ENVOY_PROXY_PORT}:8080
    networks:
      - rpc-network

  mongodb:
    image: mongo
    container_name: ${MONGO_CONTAINER_NAME}
    volumes:
      - ./mongodb:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo 10.10.10.60.27017/${MONGO_DATABASE} --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${MONGO_PORT}:27017
    networks:
      - rpc-network

  nginx:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    secrets:
      - nginx.cert
      - nginx.key
    ports:
      - "1443:1443"

secrets:
  nginx.cert:
    file: ./cert/nginx.cert
  nginx.key:
    file: ./cert/nginx.key

volumes:
  mongodb:

networks:
  rpc-network: {}

