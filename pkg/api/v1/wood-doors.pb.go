// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.3
// source: wood-doors.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WoodDoorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WoodDoorsRequest) Reset() {
	*x = WoodDoorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wood_doors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WoodDoorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WoodDoorsRequest) ProtoMessage() {}

func (x *WoodDoorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wood_doors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WoodDoorsRequest.ProtoReflect.Descriptor instead.
func (*WoodDoorsRequest) Descriptor() ([]byte, []int) {
	return file_wood_doors_proto_rawDescGZIP(), []int{0}
}

type WoodDoorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *WoodDoor `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WoodDoorsResponse) Reset() {
	*x = WoodDoorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wood_doors_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WoodDoorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WoodDoorsResponse) ProtoMessage() {}

func (x *WoodDoorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wood_doors_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WoodDoorsResponse.ProtoReflect.Descriptor instead.
func (*WoodDoorsResponse) Descriptor() ([]byte, []int) {
	return file_wood_doors_proto_rawDescGZIP(), []int{1}
}

func (x *WoodDoorsResponse) GetData() *WoodDoor {
	if x != nil {
		return x.Data
	}
	return nil
}

type WoodDoor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string     `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Price  float32    `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Tags   []string   `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Colors []*WSColor `protobuf:"bytes,5,rep,name=colors,proto3" json:"colors,omitempty"`
	Images []string   `protobuf:"bytes,7,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *WoodDoor) Reset() {
	*x = WoodDoor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wood_doors_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WoodDoor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WoodDoor) ProtoMessage() {}

func (x *WoodDoor) ProtoReflect() protoreflect.Message {
	mi := &file_wood_doors_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WoodDoor.ProtoReflect.Descriptor instead.
func (*WoodDoor) Descriptor() ([]byte, []int) {
	return file_wood_doors_proto_rawDescGZIP(), []int{2}
}

func (x *WoodDoor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WoodDoor) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WoodDoor) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *WoodDoor) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *WoodDoor) GetColors() []*WSColor {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *WoodDoor) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

type WoodDoorSpecifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Material       string   `protobuf:"bytes,1,opt,name=material,proto3" json:"material,omitempty"`
	LeafCoating    string   `protobuf:"bytes,2,opt,name=leaf_coating,json=leafCoating,proto3" json:"leaf_coating,omitempty"`
	DefaultHeight  string   `protobuf:"bytes,3,opt,name=default_height,json=defaultHeight,proto3" json:"default_height,omitempty"`
	DefaultWidth   []string `protobuf:"bytes,4,rep,name=default_width,json=defaultWidth,proto3" json:"default_width,omitempty"`
	Leaf           float32  `protobuf:"fixed32,5,opt,name=leaf,proto3" json:"leaf,omitempty"`
	DoorBoxSystem  string   `protobuf:"bytes,6,opt,name=door_box_system,json=doorBoxSystem,proto3" json:"door_box_system,omitempty"`
	Slopes         []string `protobuf:"bytes,7,rep,name=slopes,proto3" json:"slopes,omitempty"`
	Plinth         []string `protobuf:"bytes,8,rep,name=plinth,proto3" json:"plinth,omitempty"`
	AdditionalPack []string `protobuf:"bytes,9,rep,name=additional_pack,json=additionalPack,proto3" json:"additional_pack,omitempty"`
	CustomSize     string   `protobuf:"bytes,10,opt,name=custom_size,json=customSize,proto3" json:"custom_size,omitempty"`
	CustomColor    string   `protobuf:"bytes,11,opt,name=custom_color,json=customColor,proto3" json:"custom_color,omitempty"`
}

func (x *WoodDoorSpecifications) Reset() {
	*x = WoodDoorSpecifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wood_doors_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WoodDoorSpecifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WoodDoorSpecifications) ProtoMessage() {}

func (x *WoodDoorSpecifications) ProtoReflect() protoreflect.Message {
	mi := &file_wood_doors_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WoodDoorSpecifications.ProtoReflect.Descriptor instead.
func (*WoodDoorSpecifications) Descriptor() ([]byte, []int) {
	return file_wood_doors_proto_rawDescGZIP(), []int{3}
}

func (x *WoodDoorSpecifications) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

func (x *WoodDoorSpecifications) GetLeafCoating() string {
	if x != nil {
		return x.LeafCoating
	}
	return ""
}

func (x *WoodDoorSpecifications) GetDefaultHeight() string {
	if x != nil {
		return x.DefaultHeight
	}
	return ""
}

func (x *WoodDoorSpecifications) GetDefaultWidth() []string {
	if x != nil {
		return x.DefaultWidth
	}
	return nil
}

func (x *WoodDoorSpecifications) GetLeaf() float32 {
	if x != nil {
		return x.Leaf
	}
	return 0
}

func (x *WoodDoorSpecifications) GetDoorBoxSystem() string {
	if x != nil {
		return x.DoorBoxSystem
	}
	return ""
}

func (x *WoodDoorSpecifications) GetSlopes() []string {
	if x != nil {
		return x.Slopes
	}
	return nil
}

func (x *WoodDoorSpecifications) GetPlinth() []string {
	if x != nil {
		return x.Plinth
	}
	return nil
}

func (x *WoodDoorSpecifications) GetAdditionalPack() []string {
	if x != nil {
		return x.AdditionalPack
	}
	return nil
}

func (x *WoodDoorSpecifications) GetCustomSize() string {
	if x != nil {
		return x.CustomSize
	}
	return ""
}

func (x *WoodDoorSpecifications) GetCustomColor() string {
	if x != nil {
		return x.CustomColor
	}
	return ""
}

type WoodDoorVariant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color  string   `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Images []string `protobuf:"bytes,3,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *WoodDoorVariant) Reset() {
	*x = WoodDoorVariant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wood_doors_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WoodDoorVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WoodDoorVariant) ProtoMessage() {}

func (x *WoodDoorVariant) ProtoReflect() protoreflect.Message {
	mi := &file_wood_doors_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WoodDoorVariant.ProtoReflect.Descriptor instead.
func (*WoodDoorVariant) Descriptor() ([]byte, []int) {
	return file_wood_doors_proto_rawDescGZIP(), []int{4}
}

func (x *WoodDoorVariant) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *WoodDoorVariant) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

type CreateWoodDoorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string                  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ForCatalog     bool                    `protobuf:"varint,2,opt,name=for_catalog,json=forCatalog,proto3" json:"for_catalog,omitempty"`
	Price          map[string]float32      `protobuf:"bytes,3,rep,name=price,proto3" json:"price,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	Manufacturer   string                  `protobuf:"bytes,4,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Collection     string                  `protobuf:"bytes,5,opt,name=collection,proto3" json:"collection,omitempty"`
	Specifications *WoodDoorSpecifications `protobuf:"bytes,6,opt,name=specifications,proto3" json:"specifications,omitempty"`
	Tags           []string                `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Variants       []*WoodDoorVariant      `protobuf:"bytes,8,rep,name=variants,proto3" json:"variants,omitempty"`
	Reserves       []*Reserve              `protobuf:"bytes,9,rep,name=reserves,proto3" json:"reserves,omitempty"`
}

func (x *CreateWoodDoorRequest) Reset() {
	*x = CreateWoodDoorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wood_doors_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWoodDoorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWoodDoorRequest) ProtoMessage() {}

func (x *CreateWoodDoorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wood_doors_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWoodDoorRequest.ProtoReflect.Descriptor instead.
func (*CreateWoodDoorRequest) Descriptor() ([]byte, []int) {
	return file_wood_doors_proto_rawDescGZIP(), []int{5}
}

func (x *CreateWoodDoorRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateWoodDoorRequest) GetForCatalog() bool {
	if x != nil {
		return x.ForCatalog
	}
	return false
}

func (x *CreateWoodDoorRequest) GetPrice() map[string]float32 {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *CreateWoodDoorRequest) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *CreateWoodDoorRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CreateWoodDoorRequest) GetSpecifications() *WoodDoorSpecifications {
	if x != nil {
		return x.Specifications
	}
	return nil
}

func (x *CreateWoodDoorRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateWoodDoorRequest) GetVariants() []*WoodDoorVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *CreateWoodDoorRequest) GetReserves() []*Reserve {
	if x != nil {
		return x.Reserves
	}
	return nil
}

type Reserve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dealer          string            `protobuf:"bytes,1,opt,name=dealer,proto3" json:"dealer,omitempty"`
	Address         string            `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Phone           string            `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Prepay          string            `protobuf:"bytes,4,opt,name=prepay,proto3" json:"prepay,omitempty"`
	OrderDate       string            `protobuf:"bytes,5,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	ReadyDate       string            `protobuf:"bytes,6,opt,name=ready_date,json=readyDate,proto3" json:"ready_date,omitempty"`
	ReserveEndDate  string            `protobuf:"bytes,7,opt,name=reserve_end_date,json=reserveEndDate,proto3" json:"reserve_end_date,omitempty"`
	State           string            `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	Serial          string            `protobuf:"bytes,9,opt,name=serial,proto3" json:"serial,omitempty"`
	PricePerReserve float32           `protobuf:"fixed32,10,opt,name=price_per_reserve,json=pricePerReserve,proto3" json:"price_per_reserve,omitempty"`
	Additional      map[string]string `protobuf:"bytes,11,rep,name=additional,proto3" json:"additional,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Size            map[string]string `protobuf:"bytes,12,rep,name=size,proto3" json:"size,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Reserve) Reset() {
	*x = Reserve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wood_doors_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reserve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reserve) ProtoMessage() {}

func (x *Reserve) ProtoReflect() protoreflect.Message {
	mi := &file_wood_doors_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reserve.ProtoReflect.Descriptor instead.
func (*Reserve) Descriptor() ([]byte, []int) {
	return file_wood_doors_proto_rawDescGZIP(), []int{6}
}

func (x *Reserve) GetDealer() string {
	if x != nil {
		return x.Dealer
	}
	return ""
}

func (x *Reserve) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Reserve) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Reserve) GetPrepay() string {
	if x != nil {
		return x.Prepay
	}
	return ""
}

func (x *Reserve) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

func (x *Reserve) GetReadyDate() string {
	if x != nil {
		return x.ReadyDate
	}
	return ""
}

func (x *Reserve) GetReserveEndDate() string {
	if x != nil {
		return x.ReserveEndDate
	}
	return ""
}

func (x *Reserve) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Reserve) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *Reserve) GetPricePerReserve() float32 {
	if x != nil {
		return x.PricePerReserve
	}
	return 0
}

func (x *Reserve) GetAdditional() map[string]string {
	if x != nil {
		return x.Additional
	}
	return nil
}

func (x *Reserve) GetSize() map[string]string {
	if x != nil {
		return x.Size
	}
	return nil
}

type CreateWoodDoorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateWoodDoorResponse) Reset() {
	*x = CreateWoodDoorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wood_doors_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWoodDoorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWoodDoorResponse) ProtoMessage() {}

func (x *CreateWoodDoorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wood_doors_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWoodDoorResponse.ProtoReflect.Descriptor instead.
func (*CreateWoodDoorResponse) Descriptor() ([]byte, []int) {
	return file_wood_doors_proto_rawDescGZIP(), []int{7}
}

func (x *CreateWoodDoorResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateWoodDoorResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_wood_doors_proto protoreflect.FileDescriptor

var file_wood_doors_proto_rawDesc = []byte{
	0x0a, 0x10, 0x77, 0x6f, 0x6f, 0x64, 0x2d, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x1a, 0x11,
	0x77, 0x6f, 0x6f, 0x64, 0x2d, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x12, 0x0a, 0x10, 0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x11, 0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x2e,
	0x64, 0x6f, 0x6f, 0x72, 0x73, 0x2e, 0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x9f, 0x01, 0x0a, 0x08, 0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x57,
	0x53, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xfc, 0x02, 0x0a, 0x16, 0x57, 0x6f, 0x6f, 0x64, 0x44,
	0x6f, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x65, 0x61, 0x66, 0x5f, 0x63, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x65, 0x61, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x66,
	0x12, 0x26, 0x0a, 0x0f, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x6f, 0x72, 0x42,
	0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x70,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x70, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x69, 0x6e, 0x74, 0x68, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6c, 0x69, 0x6e, 0x74, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x61, 0x63,
	0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x3f, 0x0a, 0x0f, 0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f,
	0x72, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xda, 0x03, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x72,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x64, 0x6f,
	0x6f, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4a, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x64,
	0x6f, 0x6f, 0x72, 0x73, 0x2e, 0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f, 0x72, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x37, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x2e, 0x57,
	0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f, 0x72, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x6f, 0x6f,
	0x64, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x9b, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x12, 0x43, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x64, 0x6f, 0x6f,
	0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x64, 0x6f, 0x6f, 0x72,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x53, 0x69, 0x7a, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x40, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x6f, 0x64, 0x44,
	0x6f, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x32, 0xba, 0x01, 0x0a, 0x0c, 0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f, 0x72,
	0x73, 0x41, 0x70, 0x69, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x6f, 0x64, 0x44,
	0x6f, 0x6f, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x64, 0x6f, 0x6f, 0x72,
	0x73, 0x2e, 0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x2e,
	0x57, 0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x6f, 0x64, 0x44, 0x6f, 0x6f, 0x72, 0x12, 0x21, 0x2e, 0x77, 0x6f, 0x6f, 0x64, 0x2e, 0x64,
	0x6f, 0x6f, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x6f, 0x64, 0x44,
	0x6f, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x6f, 0x6f,
	0x64, 0x2e, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x6f, 0x64, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wood_doors_proto_rawDescOnce sync.Once
	file_wood_doors_proto_rawDescData = file_wood_doors_proto_rawDesc
)

func file_wood_doors_proto_rawDescGZIP() []byte {
	file_wood_doors_proto_rawDescOnce.Do(func() {
		file_wood_doors_proto_rawDescData = protoimpl.X.CompressGZIP(file_wood_doors_proto_rawDescData)
	})
	return file_wood_doors_proto_rawDescData
}

var file_wood_doors_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_wood_doors_proto_goTypes = []interface{}{
	(*WoodDoorsRequest)(nil),       // 0: wood.doors.WoodDoorsRequest
	(*WoodDoorsResponse)(nil),      // 1: wood.doors.WoodDoorsResponse
	(*WoodDoor)(nil),               // 2: wood.doors.WoodDoor
	(*WoodDoorSpecifications)(nil), // 3: wood.doors.WoodDoorSpecifications
	(*WoodDoorVariant)(nil),        // 4: wood.doors.WoodDoorVariant
	(*CreateWoodDoorRequest)(nil),  // 5: wood.doors.CreateWoodDoorRequest
	(*Reserve)(nil),                // 6: wood.doors.Reserve
	(*CreateWoodDoorResponse)(nil), // 7: wood.doors.CreateWoodDoorResponse
	nil,                            // 8: wood.doors.CreateWoodDoorRequest.PriceEntry
	nil,                            // 9: wood.doors.Reserve.AdditionalEntry
	nil,                            // 10: wood.doors.Reserve.SizeEntry
	(*WSColor)(nil),                // 11: wood.color.WSColor
}
var file_wood_doors_proto_depIdxs = []int32{
	2,  // 0: wood.doors.WoodDoorsResponse.data:type_name -> wood.doors.WoodDoor
	11, // 1: wood.doors.WoodDoor.colors:type_name -> wood.color.WSColor
	8,  // 2: wood.doors.CreateWoodDoorRequest.price:type_name -> wood.doors.CreateWoodDoorRequest.PriceEntry
	3,  // 3: wood.doors.CreateWoodDoorRequest.specifications:type_name -> wood.doors.WoodDoorSpecifications
	4,  // 4: wood.doors.CreateWoodDoorRequest.variants:type_name -> wood.doors.WoodDoorVariant
	6,  // 5: wood.doors.CreateWoodDoorRequest.reserves:type_name -> wood.doors.Reserve
	9,  // 6: wood.doors.Reserve.additional:type_name -> wood.doors.Reserve.AdditionalEntry
	10, // 7: wood.doors.Reserve.size:type_name -> wood.doors.Reserve.SizeEntry
	0,  // 8: wood.doors.WoodDoorsApi.GetWoodDoors:input_type -> wood.doors.WoodDoorsRequest
	5,  // 9: wood.doors.WoodDoorsApi.CreateWoodDoor:input_type -> wood.doors.CreateWoodDoorRequest
	1,  // 10: wood.doors.WoodDoorsApi.GetWoodDoors:output_type -> wood.doors.WoodDoorsResponse
	7,  // 11: wood.doors.WoodDoorsApi.CreateWoodDoor:output_type -> wood.doors.CreateWoodDoorResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_wood_doors_proto_init() }
func file_wood_doors_proto_init() {
	if File_wood_doors_proto != nil {
		return
	}
	file_wood_colors_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_wood_doors_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WoodDoorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wood_doors_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WoodDoorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wood_doors_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WoodDoor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wood_doors_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WoodDoorSpecifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wood_doors_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WoodDoorVariant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wood_doors_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWoodDoorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wood_doors_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reserve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wood_doors_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWoodDoorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wood_doors_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wood_doors_proto_goTypes,
		DependencyIndexes: file_wood_doors_proto_depIdxs,
		MessageInfos:      file_wood_doors_proto_msgTypes,
	}.Build()
	File_wood_doors_proto = out.File
	file_wood_doors_proto_rawDesc = nil
	file_wood_doors_proto_goTypes = nil
	file_wood_doors_proto_depIdxs = nil
}
